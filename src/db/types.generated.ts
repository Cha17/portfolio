/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface DrizzleDrizzleMigrations {
  created_at: Int8 | null;
  hash: string;
  id: Generated<number>;
}

export interface ProjectFiles {
  file_name: string;
  file_url: string;
  id: string;
  project_id: string;
}

export interface ProjectImages {
  id: string;
  image_name: string;
  image_url: string;
  project_id: string;
}

export interface Projects {
  created_at: Generated<Timestamp>;
  description: string;
  display_pdf: Generated<boolean>;
  features: string[] | null;
  full_description: string | null;
  github_url: string | null;
  id: string;
  image_url: string | null;
  live_url: string | null;
  technologies: string[] | null;
  title: string;
  updated_at: Generated<Timestamp>;
}

export interface Skills {
  category: string;
  created_at: Generated<Timestamp>;
  description: string;
  id: Generated<number>;
  name: string;
  status: string;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  "drizzle.__drizzle_migrations": DrizzleDrizzleMigrations;
  project_files: ProjectFiles;
  project_images: ProjectImages;
  projects: Projects;
  skills: Skills;
}
